const a=async a=>{try{require.resolve(a)}catch(b){console.log("Installing the module \""+a+"\"..."),require("child_process").execSync("npm install "+a),await setImmediate(()=>{}),console.log("\""+a+"\" has been installed successfully!")}try{return require(a)}catch(b){console.log("Could not include the module \""+a+"\". Please restart the bot..."),process.exit(1)}};(async()=>{async function b(b){for(const c in b.outputs)if(b.outputs[c].name&&b.outputs[c].name.startsWith("action"))return!0;return!1}async function c(){for(const c in i.workspaces)for(const a in i.workspaces[c].blocks){const b=i.workspaces[c].blocks[a];if(g[b.name]&&!h[b.name].auto_event&&h[b.name].auto_normal){const d={name:b.name,index:a,workspace:c,inputs:b.inputs,options:b.options,outputs:b.outputs};await g.ExecuteBlock(d)}}for(const a in i.workspaces)for(const b in i.workspaces[a].blocks){const c=i.workspaces[a].blocks[b];if(g[c.name]&&h[c.name].auto_event){const d={name:c.name,index:b,workspace:a,inputs:c.inputs,options:c.options,outputs:c.outputs};g.ExecuteBlock(d)}}}const d=await a("discord.js"),e=require("fs"),f=require("path");console.log("Please wait...");let g={},h={};const i=function(a){return JSON.parse(e.readFileSync(a))}(f.join(__dirname,"data.json")),j=e.readdirSync(f.join(__dirname,"blocks"));if("workspaces"in i&&Array.isArray(i.workspaces)||(i.workspaces=[]),"token"in i&&"string"==typeof i.token||(i.token=""),"prefix"in i&&"string"==typeof i.prefix||(i.prefix="!"),"owners"in i&&Array.isArray(i.owners)||(i.owners=[]),function(a,b,c){e.writeFileSync(a,c?JSON.stringify(b,void 0,4):JSON.stringify(b))}(f.join(__dirname,"data.json"),i,!0),!i.token)throw console.clear(),"\x1B[31m\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\x1B[0m\n\x1B[1m\x1B[31m          DISCORD BOT BUILDER          \x1B[0m\n\x1B[1m\x1B[31m        Bot Token does not exist       \x1B[0m\n\x1B[31m\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\x1B[0m";const k=new d.Client;try{k.login(i.token)}catch(a){throw console.clear(),"\x1B[31m\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\x1B[0m\n\x1B[1m\x1B[31m          DISCORD BOT BUILDER          \x1B[0m\n\x1B[1m\x1B[31m          Bot Token is invalid         \x1B[0m\n\x1B[31m\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\x1B[0m"}k.on("ready",async()=>{console.clear(),console.log("\x1B[32m\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\x1B[0m\n\x1B[1m\x1B[32m          DISCORD BOT BUILDER          \x1B[0m\n\x1B[1m\x1B[32m              Bot Started              \x1B[0m\n\x1B[32m\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\x1B[0m");for(const a of j)if(".js"==f.parse(a).ext.toLowerCase()){const c=require(f.join(__dirname,"blocks",a));g[f.parse(a).name]=c.code;const d=await b(c);h[f.parse(a).name]={code:c.code,auto_event:!!c.auto_execute&&d,auto_normal:!!c.auto_execute},c.system&&c.system(g)}c()}),k.on("raw",async a=>{if(!["MESSAGE_REACTION_ADD","MESSAGE_REACTION_REMOVE"].includes(a.t))return;let b;const c=k.channels.get(a.d.channel_id),e=k.users.get(a.d.user_id);c?b=c:e&&(b=e.dmChannel?e.dmChannel:await e.createDM()),b.messages.has(a.d.message_id)||b.fetchMessage(a.d.message_id).then(b=>{const c=a.d.emoji.id?a.d.emoji.name+":"+a.d.emoji.id:a.d.emoji.name;let f;if(f="dm"==b.channel.type?b.channel.recipient:e,"MESSAGE_REACTION_ADD"==a.t){const a=b.reactions.get(c);k.emit("messageReactionAdd",a,f)}else if("MESSAGE_REACTION_REMOVE"==a.t){let e;if(b.reactions.size)e=b.reactions.get(c);else{const c=k.emojis.get(a.d.emoji.id);e=new d.MessageReaction(b,c?c:{id:null,name:a.d.emoji.name},0,!1)}k.emit("messageReactionRemove",e,f)}})}),g.variables={},g.data=i,g.client=k,g.RunNextBlock=function(c,d){for(const b in i.workspaces[d.workspace].blocks){const a=i.workspaces[d.workspace].blocks[b];if(a.inputs)for(const e in a.inputs)if(d.outputs[c].includes(a.inputs[e])){const c={name:a.name,index:b,workspace:d.workspace,inputs:a.inputs,options:a.options,outputs:a.outputs};this.ExecuteBlock(c)}}},g.ExecuteBlock=function(a){try{g[a.name](a)}catch(b){console.log("\n\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\nERROR:\n\nWorkspace:"+(!isNaN(a.workspace)&&"info"in i.workspaces[a.workspace]&&"title"in i.workspaces[a.workspace].info?" "+i.workspaces[a.workspace].info.title:"")+(isNaN(a.workspace)?"":" ["+(parseInt(a.workspace)+1)+"]")+"\nBlock:"+("name"in a?" "+a.name:"")+(isNaN(a.index)?"":" ["+(parseInt(a.index)+1)+"]")+"\nError Message: "+b+"\n\n(If you do not understand what is saying above, join our Discord Server to get help but keep in mind that the support is done voluntarily.)\n\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\n")}},g.GetInputValue=function(a,b){if(!(b.workspace in this.variables))throw"The workspace ["+(parseInt(b.workspace)+1)+"] is not registered in variables.";else if(!(a in b.inputs))throw"There is no \""+a+"\" in inputs.";else return this.variables[b.workspace][b.inputs[a]]},g.GetOptionValue=function(a,b){if(a in b.options)return b.options[a];throw"There is no \""+a+"\" in options."},g.StoreOutputValue=function(a,b,c){if(!(b in c.outputs))throw"There is no \""+b+"\" in outputs.";else if(!Array.isArray(c.outputs[b]))throw"The output ["+b+"] is not an array.";else for(let d=0;d<c.outputs[b].length;d++)c.workspace in this.variables||(this.variables[c.workspace]={}),this.variables[c.workspace][c.outputs[b][d]]=a},g.require=async function(b){return await a(b)}})();